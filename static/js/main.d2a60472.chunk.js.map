{"version":3,"sources":["components/selection/Selection.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Selection","useState","isEscaleted","setIsEscaleted","selectedIndex","setSelectedIndex","handleClick","i","className","classNames","onClick","App","startTime","Date","difference","getTime","offsetTimestamp","setSeconds","getSeconds","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRA+CeA,MA3Cf,WACE,MAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA0CF,mBAAS,MAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KAEMC,EAAc,SAACC,GACnBJ,GAAe,GACfE,EAAiBE,IAGnB,OACE,sBAAKC,UAAWC,IACd,CACE,uBAAuB,EACvB,UAAaP,IAHjB,UAOE,sBAAKM,UAAWC,IAAW,CACzB,oBAAoB,EACpB,kBAAoC,GAAjBL,IACjBM,QAAS,kBAAMJ,EAAY,IAH/B,UAKE,mBAAGE,UAAU,wCACb,oBAAIA,UAAU,eAAd,wBAEF,sBAAKA,UAAWC,IAAW,CACzB,oBAAoB,EACpB,kBAAoC,GAAjBL,IACjBM,QAAS,kBAAMJ,EAAY,IAH/B,UAIE,mBAAGE,UAAU,4BACb,oBAAIA,UAAU,eAAd,wBAEF,sBAAKA,UAAWC,IAAW,CACzB,oBAAoB,EACpB,kBAAoC,GAAjBL,IACjBM,QAAS,kBAAMJ,EAAY,IAH/B,UAIE,mBAAGE,UAAU,gCACb,oBAAIA,UAAU,eAAd,gCCxBOG,MAbf,WACE,IAAMC,EAAY,IAAIC,KAAK,KAAM,EAAG,GAAI,GAAI,GAAI,GAE1CC,GADM,IAAID,MACQE,UAAYH,EAAUG,UACxCC,EAAkB,IAAIH,KAE5B,OADAG,EAAgBC,WAAWD,EAAgBE,aAAeJ,EAAW,KAEnE,qBAAKN,UAAU,MAAf,SACE,cAAC,EAAD,OCESW,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d2a60472.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport './Selection.css';\n\nfunction Selection() {\n  const [isEscaleted, setIsEscaleted] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(null);\n\n  const handleClick = (i) => {\n    setIsEscaleted(true);\n    setSelectedIndex(i);\n  }\n\n  return (\n    <div className={classNames(\n      {\n        'selection-container': true,\n        'escelated': isEscaleted\n      }\n    )\n    }>\n      <div className={classNames({\n        'option-container': true,\n        'option-selected': selectedIndex == 0\n      })} onClick={() => handleClick(0)}\n      >\n        <i className=\"option-icon bx bx-alarm-exclamation\"></i>\n        <h5 className=\"option-label\"> Alarm </h5>\n      </div>\n      <div className={classNames({\n        'option-container': true,\n        'option-selected': selectedIndex == 1\n      })} onClick={() => handleClick(1)}>\n        <i className=\"option-icon bx bx-timer\"></i>\n        <h5 className=\"option-label\"> Timer </h5>\n      </div>\n      <div className={classNames({\n        'option-container': true,\n        'option-selected': selectedIndex == 2\n      })} onClick={() => handleClick(2)}>\n        <i className=\"option-icon bx bx-stopwatch\"></i>\n        <h5 className=\"option-label\"> Stopwatch </h5>\n      </div>\n    </div>\n  );\n}\n\nexport default Selection;\n","import React from 'react';\nimport './App.css';\nimport Selection from './components/selection/Selection';\n\nfunction App() {\n  const startTime = new Date(2021, 4, 28, 20, 30, 0);\n  const now = new Date();\n  const difference =  now.getTime() - startTime.getTime();\n  const offsetTimestamp = new Date();\n  offsetTimestamp.setSeconds(offsetTimestamp.getSeconds() + difference/1000);\n  return (\n    <div className=\"App\">\n      <Selection></Selection>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}