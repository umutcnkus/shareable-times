{"version":3,"sources":["components/stopwatch-setter/StopwatchSetter.tsx","components/selection/Selection.tsx","components/stopwatch/Stopwatch.tsx","components/timer/Timer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["enforceMinMax","el","target","value","isNaN","filterInt","min","max","test","Number","NaN","StopwatchSetter","SelectionOptions","type","useState","setterVisible","setSetterVisible","days","setDays","hours","setHours","minutes","setMinutes","seconds","setSeconds","history","useHistory","className","defaultValue","name","onChange","onKeyUp","placeholder","onClick","now","Date","start","moment","end","subtract","location","Stopwatch","push","toDate","getTime","navigate","Selection","isEscaleted","setIsEscaleted","selection","setSelection","isAnimationEnd","setIsAnimationEnd","selections","Timer","icon","Alarm","classNames","onTransitionEnd","e","map","val","i","stopPropagation","handleClick","useParams","startTime","parseInt","difference","offsetTimestamp","getSeconds","useStopwatch","autoStart","endTime","useTimer","expiryTimestamp","App","baseName","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ef019a6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './StopwatchSetter.css';\nimport moment from \"moment\"\nimport { useHistory } from \"react-router-dom\";\nimport { SelectionOptions } from '../selection/Selection';\n\n\nconst enforceMinMax = (el) => {\n    if (el.target.value !== \"\") {\n        if (isNaN(filterInt(el.target.value)) || filterInt(el.target.value) === 0) {\n            el.target.value = el.target.min;\n        }\n        if (filterInt(el.target.value) < filterInt(el.target.min)) {\n            el.target.value = el.target.min;\n        }\n        if (filterInt(el.target.value) > filterInt(el.target.max)) {\n            el.target.value = el.target.max;\n        }\n        return el.target.value;\n    }\n}\n\nconst filterInt = (value) => {\n    if (/^[-+]?(\\d+|Infinity)$/.test(value)) {\n        return Number(value)\n    } else {\n        return NaN\n    }\n}\n\n\nfunction StopwatchSetter({ type }) {\n    const [setterVisible, setSetterVisible] = useState(false);\n    const [days, setDays] = useState(0);\n    const [hours, setHours] = useState(0);\n    const [minutes, setMinutes] = useState(0);\n    const [seconds, setSeconds] = useState(0);\n    let history = useHistory();\n\n    const navigate = (type: SelectionOptions) => {\n        let now = new Date();\n        let start = moment(now);\n        let end = moment(start).subtract(days, \"days\").subtract(hours, \"hours\").subtract(minutes, \"minutes\").subtract(seconds, \"seconds\");\n        const location = type === SelectionOptions.Stopwatch ? \"/stopwatch/\" : \"/timer/\"\n        history.push('/shareable-times' + location + end.toDate().getTime());\n    }\n\n    return (\n        <div className=\"controls-container\">\n            {setterVisible && <div className=\"input-container\">\n                <input defaultValue=\"0\" name=\"days\" className=\"date-time-input\" min={0} max={99} onChange={(el) => setDays(enforceMinMax(el))} onKeyUp={enforceMinMax} placeholder=\"d\" />\n                <span className=\"date-time-input\">:</span>\n                \n                <input defaultValue=\"0\" name=\"hours\" className=\"date-time-input\" min={0} max={23} onChange={(el) => setHours(enforceMinMax(el))} onKeyUp={enforceMinMax} placeholder=\"h\" />\n                <span className=\"date-time-input\">:</span>\n                \n                <input defaultValue=\"0\" name=\"minutes\" className=\"date-time-input\" min={0} max={59} onChange={(el) => setMinutes(enforceMinMax(el))} onKeyUp={enforceMinMax} placeholder=\"m\" />\n                <span className=\"date-time-input\">:</span>\n                \n                <input defaultValue=\"0\" name=\"seconds\" className=\"date-time-input\" min={0} max={59} onChange={(el) => setSeconds(enforceMinMax(el))} onKeyUp={enforceMinMax} placeholder=\"s\" />\n            </div>\n            }\n            { !setterVisible && <i className=\"option-icon bx bx-rewind\" onClick={() => setSetterVisible(true)}></i>\n            }\n            <i onClick={() =>navigate(type)} className=\"option-icon bx bx-play\"></i>\n        </div>\n    );\n}\n\nexport default StopwatchSetter;","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport StopwatchSetter from '../stopwatch-setter/StopwatchSetter';\nimport './Selection.css';\n\nexport enum SelectionOptions {\n  Alarm = 'Alarm',\n  Timer = 'Timer',\n  Stopwatch = 'Stopwatch'\n}\n\nfunction Selection() {\n  const [isEscaleted, setIsEscaleted] = useState(false);\n  const [selection, setSelection] = useState(null);\n  const [isAnimationEnd, setIsAnimationEnd] = useState(false);\n\n  const selections = [\n    {\n      name: SelectionOptions.Timer,\n      icon: 'bx bx-timer'\n    }, \n    {\n      name: SelectionOptions.Alarm,\n      icon: 'bx bx-alarm-exclamation'\n    }, \n    {\n      name: SelectionOptions.Stopwatch,\n      icon: 'bx bx-stopwatch'\n    } \n];\n\n  const handleClick = (i, val) => {\n    setIsEscaleted(true);\n    setSelection(val.name);\n  }\n\n  return (\n    <div className='main-container'>\n      <div className={classNames({'selection-container': true,'escelated': isEscaleted})} onTransitionEnd={(e) => setIsAnimationEnd(true)}>\n        {\n          selections.map((val, i) => \n            <div onTransitionEnd={(e)=>e.stopPropagation()} className={classNames({\n              'option-container': true,\n              'option-selected': selection === val.name\n            })} onClick={() => handleClick(i, val)}\n            >\n              <i className={classNames({'option-icon bx': true, [val.icon]: true})}></i>\n              <h5 className='option-label'> {val.name} </h5>\n            </div>\n          )\n        }\n      </div>\n      <div className={classNames({'setter-container': true, 'escelated': true})}>\n      {isAnimationEnd && <StopwatchSetter type={selection}></StopwatchSetter>}\n      </div>\n    </div>\n  );\n}\n\nexport default Selection;\n","import React from 'react';\nimport './Stopwatch.css';\nimport { useStopwatch } from 'react-timer-hook';\nimport {\n  useParams\n} from \"react-router-dom\";\n\nfunction Stopwatch() {\n    const { start } = useParams();\n    const startTime = new Date(parseInt(start));\n    const now = new Date();\n    const difference =  now.getTime() - startTime.getTime();\n    const offsetTimestamp = new Date();\n    offsetTimestamp.setSeconds(offsetTimestamp.getSeconds() + difference/1000);\n    const {\n        seconds,\n        minutes,\n        hours,\n        days,\n      } = useStopwatch({ autoStart: true , offsetTimestamp: offsetTimestamp});\n    \n    \n      return (\n        <div className=\"watch-container\">\n           {days} : {hours} : {minutes} : {seconds}\n        </div>\n      );\n}\n\nexport default Stopwatch;","import React from 'react';\nimport './Timer.css';\nimport { useTimer } from 'react-timer-hook';\nimport {\n  useParams\n} from \"react-router-dom\";\n\nfunction Timer() {\n    const { end } = useParams();\n    const endTime = new Date(parseInt(end));\n    const now = new Date();\n    const difference =  now.getTime() - endTime.getTime();\n    const offsetTimestamp = new Date();\n    offsetTimestamp.setSeconds(offsetTimestamp.getSeconds() + difference/1000);\n    const {\n        seconds,\n        minutes,\n        hours,\n        days,\n        start\n      } = useTimer({ autoStart: true, expiryTimestamp: offsetTimestamp});\n      return (\n        <div className=\"watch-container\">\n           {days} : {hours} : {minutes} : {seconds}\n        </div>\n      );\n}\n\nexport default Timer;","import React from 'react';\nimport './App.css';\nimport Selection from './components/selection/Selection';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Stopwatch from './components/stopwatch/Stopwatch';\nimport Timer from './components/timer/Timer';\n\nfunction App() {\n  const startTime = new Date(2021, 4, 28, 20, 30, 0);\n  const now = new Date();\n  const difference =  now.getTime() - startTime.getTime();\n  const offsetTimestamp = new Date();\n  offsetTimestamp.setSeconds(offsetTimestamp.getSeconds() + difference/1000);\n  return (\n    <div className=\"App\">\n      <Router baseName=\"/sharable-times\">\n        <Switch>\n        <Route path=\"/shareable-times/stopwatch/:start\">\n          <Stopwatch></Stopwatch>\n        </Route>\n        <Route path=\"/shareable-times/timer/:end\">\n          <Timer></Timer>\n        </Route>\n        <Route path=\"/\">\n          <Selection></Selection>\n        </Route>\n      </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}